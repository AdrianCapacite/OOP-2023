package ie.tudublin;

import processing.core.PApplet;
import processing.core.PVector;

/**
 * FlowLines
 * Flow lines is a grid of vectors which direct the flow of lines.
 *  - The vectors are generated by a Perlin noise function.
 *  - The lines are generated by a random walk.
 *  - The lines are drawn with a random colour.
 *
 */
public class FlowLines extends PApplet{
    PVector[][] vectors;
    int vecWidth;
    int vecHeight;
    int vecSize; // size of each vector
    public void settings(){
        fullScreen(P3D);
        colorMode(HSB);
    }

    public void setup(){
        background(0);
        vecSize = 20; // 20 pixels for each vector
        vecWidth = width / vecSize;
        vecHeight = height / vecSize;
        vectors = new PVector[vecWidth][vecHeight];

    }

    public void draw(){
        background(0);

        // Generate a grid of vectors
        generateVectors(frameCount);

        // Draw the vectors
        stroke(255);
        renderVectors();
    }

    /**
     * Generates a grid of vectors using Perlin noise.
     * @param t
     */
    void generateVectors(int t) {
        for (int i = 0; i < vecHeight; i++) {
            for (int ii = 0; ii < vecWidth; ii++) {
                float x = map(noise(i * 0.1f, ii * 0.1f, t * 0.01f), 0, 1, -1, 1);
                float y = map(noise(i * 0.1f, ii * 0.1f, t * 0.01f), 0, 1, -1, 1);
                vectors[i][ii] = new PVector(x, y).normalize();
            }
        }
    }

    void renderVectors() {
        for (int i = 0; i < vecHeight; i++) {
            for (int ii = 0; ii < vecWidth; ii++) {
                PVector v = vectors[i][ii];
                // Draw a line from the center of the vector to the edge
                float x = v.x * vecSize / 2;
                float y = v.y * vecSize / 2;
                line(ii,i, x, y);
            }
        }
    }

}
